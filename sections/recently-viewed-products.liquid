{%- if section.settings.display_recently_viewed_products -%} 
{{- 'jquery-cookie.min.js' | asset_url | script_tag -}}
{{- '//ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js' | script_tag -}}
{{- 'jquery.products.min.js' | asset_url | script_tag -}}
{%- comment -%}
{{- 'slick.min.js' | asset_url | script_tag -}}
{%- endcomment -%}

<section class="recently-viewed-products" style="display: none;">
  {%- if section.settings.recently_viewed_products_title != '' -%}
  <div class="widget-title not-before">   
    <h3 class="box-title">
      <span class="title"> 
        {%- include 'multilang' with section.settings.recently_viewed_products_title -%}
      </span>
    </h3>
  </div>
  {%- endif -%}
  
  {%- if settings.category_layout == 'full_with' or template.suffix == 'fullwidth' -%}
  {%- assign class = 'six-items' -%}
  {%- assign rows = '6' -%}
  
  {%- else -%}
  {%- assign class = 'five-items' -%}
  {%- assign rows = '5' -%}
  {%- endif -%}
  
  <div class="widget-product">
  	<div class="products-grid row {{ class }} scroll-carousel" data-rows="{{ rows }}" id="recently-viewed-products-grid"></div>
  </div>
</section>

<script>
  {%- if settings.enable_multilang -%}
  function splitTitle(title) {
    if (title.indexOf("|") < 0) 
      return title;
    var titleArr = title.split("|")[0];
    return titleArr;
  }

  function splitTitle2(title) {
    if (title.indexOf("|") < 0) 
      return title;
    var titleArr = title.split("|")[1];
    return titleArr;
  }
  
  {%- else -%}
  function splitTitle(title) {
    if (title.indexOf("|") < 0) 
      return title;
    var titleArr = title.split("|")[0];
    return titleArr;
  }
{%- endif -%}
</script>


<script id="recently-viewed-product-grid-template" type="text/x-jquery-tmpl">
  <div class="product-item{% raw %}{{if !available}} sold-out {{/if}}{{if compare_at_price_min > price_min}} on-sale{{/if}}{% endraw %} grid-item col-6 col-md-4 col-lg-2 {% if settings.product_image_border %}grid-item-border{% endif %}" data-product-id="product-${id}">
	<a href="${url}" class="product-image product-grid-image" data-collections-related="/collections/${collection}?view=related">
	  <img class="lazyload" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%202000%202500'%3E%3C/svg%3E" data-src="${Shopify.Products.resizeImage(featured_image, "large")}" alt="{% raw %}{{if !available}}${featured_image.alt}{{else}}${title}{{/if}}{% endraw %}"/>
      <div class="product-label">
        {% raw %}{{if compare_at_price_min > price_min}} 
        <strong class="label sale-label">
          {% endraw %}{{- 'products.product.sale' | t -}}{% raw %}
        </strong>
        {{/if}}
        {{if !available}}
        <strong class="label sold-out-label">
          {% endraw %}{{- 'products.product.sold_out' | t -}}{% raw %}
        </strong>
        {{/if}}                  
      </div>
    </a>
    <div class="product-bottom">
      <span class="product-vendor">${vendor}</span>
      <a class="product-title lang1" href="${url}">${splitTitle(title)}</a>
      {{if compare_at_price_min > price_min}} 
      <div class="price-box price-sale">
        <span class="old-price">
        {{html Shopify.formatMoney(compare_at_price_min, window.money_format)}}
        </span>
        <span class="special-price">
          {{if price_varies}}{% endraw %}{%- include 'varies_from' -%}{% raw %}{{/if}}
          {{html Shopify.formatMoney(price_min, window.money_format)}}
        </span>
      </div>
      {{else}}
      <div class="price-box regular-product">
        {{if price_varies}}{% endraw %}{%- include 'varies_from' -%}{% raw %}{{/if}}
        {{html Shopify.formatMoney(price_min, window.money_format)}}
      </div>
      {{/if}}
      {% endraw %}

      {%- comment -%}
        Payment plan - ViaBill or Sezzle
      {%- include 'product-grid-item-payment-plan' -%}
      {%- endcomment -%}

      {%- comment -%}
        Product warranty eligibility
      {%- include 'product-warranty-eligibility' -%}
      {%- endcomment -%}
        
    </div>                        
  </div>
</script>

<script>
  $('.recently-viewed-products').hide();
  
  function setupRecentlyViewed(){
    Shopify.Products.showRecentlyViewed({ 
      howManyToShow: 0 + {{ section.settings.number_of_recently_viewed_products }} + 0,
      wrapperId: 'recently-viewed-products-grid', 
      templateId: 'recently-viewed-product-grid-template',
      onComplete: function() {
        var recentlyViewBlock = $('.recently-viewed-products');
        var recentlyGrid = recentlyViewBlock.find('#recently-viewed-products-grid');
        var productGrid = recentlyGrid.children();
        var rows = recentlyGrid.data('rows');

        if(productGrid.length) {
          recentlyViewBlock.show();

          if(recentlyViewBlock.is(':visible')) {          
            {%- if settings.enable_multilang -%}
            if (translator.current_lang == 2)
              translator.doTranslate('.recently-viewed-products');
            {%- endif -%}

            if(
              ! recentlyGrid.hasClass('scroll-carousel')
              && ! recentlyGrid.hasClass('slick-initialized')
            ) {
              recentlyGrid.slick({
                waitForAnimate: false,
                infinite: true,
                speed: 1000,
                slidesToShow: rows,
                dots: false,
                slidesToScroll: rows,
                nextArrow: '<button type="button" class="slick-next"><i class="fa fa-angle-right"></i></button>',
                prevArrow: '<button type="button" class="slick-prev"><i class="fa fa-angle-left"></i></button>',
                responsive: [
                  {
                    breakpoint: 1400,
                    settings: {
                      slidesToShow: 5,
                      slidesToScroll: 5
                    }
                  },
                  {
                    breakpoint: 1200,
                    settings: {
                      slidesToShow: 4,
                      slidesToScroll: 4,
                      arrows:false,
                      dots: true              
                    }
                  },
                  {
                    breakpoint: 992,
                    settings: {
                      slidesToShow: 3,
                      slidesToScroll: 3,
                      arrows:false,
                      dots: true              	
                    }
                  },
                  {
                    breakpoint: 768,
                    settings: {
                      slidesToShow: 2,
                      slidesToScroll: 2,
                      arrows:false,
                      dots: true
                    }
                  }
                ]
              });
            };     
            
            

            if($('.spr-badge').length > 0) {
              return window.SPR.registerCallbacks(), window.SPR.initRatingHandler(), window.SPR.initDomEls(), window.SPR.loadProducts(), window.SPR.loadBadges();
            }; 

            if (window.show_multiple_currencies) {
              Currency.convertAll(window.shop_currency, $('#currencies .active').attr('data-currency'), '#dropdown-cart span.money', 'money_format');
            };
          }; 
        }

        else {
          recentlyViewBlock.hide();
        };

        var $outer_container = $(".product-recently-viewed");
		$outer_container.removeClass("hidden");
        
        var wishListItems = localStorage.getItem('items') ? JSON.parse(localStorage.getItem('items')) : [];

        if (!wishListItems.length) {
          return;
        }

        for (var i = 0; i < wishListItems.length; i++) {
          var icon = $('[data-product-handle="'+ wishListItems[i] +'"]');
          icon.addClass('whislist-added');
          icon.find('.wishlist-text').text(window.inventory_text.remove_wishlist);
        };
      }
    });
  }

  function shopifyRecentlyViewed(){
    if ( 
      Shopify 
      && "Products" in Shopify 
      && "showRecentlyViewed" in Shopify.Products 
//       && Shopify.Products.showRecentlyViewed 
      && {}.toString.call(Shopify.Products.showRecentlyViewed) === '[object Function]'
      && typeof(Shopify.Products.showRecentlyViewed) === 'function'
    ){

      setupRecentlyViewed();

//       Shopify.Products.recordRecentlyViewed();

    }
    else {
    
      if (
        typeof hsjs !== "undefined"
        && hsjs.tools
        && hsjs.tools.waitForJSObject
      ){
        
        hsjs.tools.waitForJSObject(
          "Shopify.Products",
          function(){
          
            shopifyRecentlyViewed();
            
          },
          10000
        );
      }
    
    }

    {%- comment -%}
    if ( 
      Shopify 
      && Shopify.Products 
    ){
      
      if ( 
        Shopify.Products.showRecentlyViewed 
        && {}.toString.call(Shopify.Products.showRecentlyViewed) === '[object Function]'
        && typeof(Shopify.Products.showRecentlyViewed) === 'function'
      ){
        
        setupRecentlyViewed();

      }
      
      if ( 
        Shopify.Products.recordRecentlyViewed 
        && {}.toString.call(Shopify.Products.recordRecentlyViewed) === '[object Function]'
        && typeof(Shopify.Products.recordRecentlyViewed) === 'function'
      ){
        Shopify.Products.recordRecentlyViewed();
      }
  
    }
    {%- endcomment -%}
    
  }
  shopifyRecentlyViewed();
  
</script>

{%- endif -%}

{{- "" -}}{% schema %}
  {
    "name": "Recently Viewed Products",
    "settings": [
      {
        "type": "checkbox",
        "id": "display_recently_viewed_products",
        "label": "Display Recently Viewed Products?",
        "default": true
      },
      {
        "type": "text",
        "id": "recently_viewed_products_title",
        "label": "Title of recently viewed products",
        "default": "Recently Viewed Products"
      },
      {
        "type": "text",
        "id": "number_of_recently_viewed_products",
        "label": "Number of recently viewed products",
        "default": "8"
      }
      
    ]
  }
{% endschema %}{{- "" -}}
