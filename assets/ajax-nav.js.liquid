/*
 * Site AJAX Nav 
 */
hsjs.ajaxSiteNav = {

  // AJAX Site Navigation
  // Attach handlers
  // Get page
  // Populate page
  // Re-init JS
  mainContentSelector: function(){
  	return "main.main-content";
  },

  // This controls the settings and injection of the ajax loading spinner			
  showLoading: function(){	
    hsjs.ajax.showLoading();

    // Only inject the spinner if the plugin has been loaded	
    if (window.Spinner) {	
      // Ensures only one spinner is active at a time
      if (!$('#spinner').length) {$('body').append('<div id="spinner"></div>');}

      // Declare needed global variables	
      var spinnerLoader = '<div class="loader-container"><div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div></div>';
      var cubeLoader = '<div class="loader-container"><div class="sk-folding-cube"><div class="sk-cube1 sk-cube"></div><div class="sk-cube2 sk-cube"></div><div class="sk-cube4 sk-cube"></div><div class="sk-cube3 sk-cube"></div></div></div>';

      // 				  setTimeout(function(){
      $(hsjs.ajax.mainContentSelector()).css({"position":"relative"}).append("<div class=\"modal-backdrop ajax-backdrop fade show\"></div>").append(cubeLoader);
      // 				  }, 137);

      // Spinner settings
      var opts = {
        lines: 11, // The number of lines to draw
        length: 9, // The length of each line
        width: 5, // The line thickness
        radius: 12, // The radius of the inner circle
        corners: 0.4, // Corner roundness (0..1)
        color: '#a87fc6', // #rgb or #rrggbb or array of colors
        className: 'spinner', // The CSS class to assign to the spinner
        top: '45%', // Top position relative to parent
        left: '55%' // Left position relative to parent
      };
      var target = document.getElementById('spinner');
      var spinner = new Spinner(opts).spin(target);
    }
  },
  
  hideLoading: function(){
    hsjs.ajax.hideLoading();
    $(hsjs.ajax.mainContentSelector() + " > *").removeClass("animated animated-shortest fadeInUp");
    $(hsjs.ajax.mainContentSelector()).css({"position":""});
    /*
					$(main_container_selector).css({'position':''});
					$(main_container_selector).find('<div class="modal-backdrop fade show"></div>').remove();
					$(main_container_selector).find(cubeLoader).remove();
*/
    // 				   $('#spinner').empty();

    setTimeout(function() {
      //loadAllFunctions();
      $(hsjs.ajax.mainContentSelector()).removeClass("animated animated-shortest fadeIn");
    },1000);

    //   $(main_container_selector).one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){
    //	  $(main_container_selector).removeClass('animated animated-shortest fadeInUp fadeOut');
    //  });
  },

  pluginUnload: function(){

    // Ajax loading often involves loading the same plugin multiple times(different pages, etc).
    // However some plugins can't be reinitilized on existing DOM elements or they will error. 
    // This function list those plugins and detaches their handlers on load so that their 
    // elements are free to be reattached to at a later time

    // List of plugins that require detachment
    var pluginList = ['.dataTables_wrapper', '.single-daterange', 
                      '.datepicker', '.rangepicker', '.colorpicker', 
                      '.rgbapicker', '.timepicker', '[data-toggle="tooltip"]', 
                      '#graph'];

    // Cycle through each plugin and detach its handler
    $.each(pluginList, function(i, e) {
      if ($(e).length) {
        $(e).detach();
      };
    });
  },

  loadContent: function(pageURL, ajaxLink, ajaxTitle, ajaxURL, ajaxHash){		
    // We Ajax load the requested content and then prepare the main container for its arrival. 
    // Declared as a global function as Google API utilizes this script from the window scope.

    var main_container_selector = hsjs.ajax.mainContentSelector();
    var login_check_text = '<link rel="canonical" href="/admin/login.php" />';
    var login_page_url = '/admin/login';

    $.ajax({

      beforeSend: function() {
        // On page content animation -- adds a new body class, preps the content container, and adds a css animation
        $(main_container_selector + " > *").addClass("animated animated-shortest fadeOut");
        
        // On page content processing
        $("#defaultModal, #formModal, #alertModal").remove();

        // Start loading animation
        hsjs.ajaxSiteNav.showLoading(); 

        // browser address bar URL
        $("body").removeClass(pageURL.toLowerCase() + " " + ajaxHash.substring(1) + '-page').addClass(ajaxTitle + '-page'); 
      },
      
      url: ajaxURL,
      cache:true,

      success: function(data, status, xhr) {
        // Return if login page
        var current_page_url = window.location.origin + window.location.pathname + window.location.search 
        var encoded_page_url = encodeURIComponent(current_page_url);
        if (data.indexOf(login_check_text) !== -1){
          window.location = login_page_url + "?return=" + encoded_page_url;
          return true;
        };
        
        // Unload plugins
        // Detach various handlers from DOM to prevent plugin errors
        hsjs.ajaxSiteNav.pluginUnload();
        
        // Append new AJAX content
        if ($(data).find(main_container_selector).length){
          var new_content = $(data).find(main_container_selector).contents();
        }
        $(main_container_selector).html(new_content);
      },

      // On Complete reInit checkbox plugin and remove css animations
      complete: function() {

        // Stop loading animation
        hsjs.ajaxSiteNav.hideLoading(); 

      }	  
    });
  },

  // Ajax Page Loading
  attachClickHandler: function(){

    var main_container_selector = hsjs.ajax.mainContentSelector();

    var pageURL,
        ajaxLink,
        ajaxTitle,	
        ajaxURL,
        ajaxHash,
        clickedLinkPathname; 
    var login_page_url = '/admin/login';

    jQuery.ajaxSetup({cache:true});

    // Attach handler to intercept menu item events - Left Sidebar, Left User Menu, Right User Menu 
    // 		$('.sidebar-menu li a, .user-menu a, .sidebar_right_menu a, a').on('click', function(e) {
    // Attach handler to all external links 
    $(document.body).on("click", "a", function(e) {

      if (
        (this.target == "_blank")
        || ( ! this.hostname) 
        || (this.hostname != location.hostname)
        || (this.pathname == location.pathname) 
      ){
        return;
      }
      console.log(this);
      console.log(this.hostname);
      console.log(this.pathname);
      console.log(location.hostname);
      console.log(location.pathname);

      // Check for scenarios where we might want to prevent an ajax load
      if ($(e.currentTarget).hasClass('accordion-toggle')) {
        return;
      } // We prevent load when user clicks a dropdown link
      // We prevent load if the ajax option checkbox is unchecked
      if ($('#ajax-option').length && !$('#ajax-option').prop('checked')) {return;} 
      // Manually disable links via html class. Used on large docs
      if ($(e.currentTarget).hasClass('ajax-disable')) {return;} 
      // Disable for login page 
      if (this.pathname == login_page_url) {return;} 
      // Disable any links with actions via hashes or queries
      if (this.href.split("#")[1] || this.href.split("?")[1]) {return;}

      // Disable item click to prevent page refresh
      e.preventDefault();


      // Declare several needed global variables
      pageURL = window.location.pathname.slice(0, -5).split('/').pop();
      ajaxLink = $(e.currentTarget).attr('href');
      ajaxTitle = ajaxLink.slice(0, -5);	
      ajaxURL = ajaxLink;
      ajaxHash = window.location.hash;

      clickedLinkPathname = this.pathname
      // Check to make sure link is not the page we're already on to prevent spam clicks
      if (clickedLinkPathname == window.location.pathname) {return;}

      // Updated window URL and history
      window.history.pushState("", "", clickedLinkPathname);

      // Use URL Pathname to find and remove the old active menu item
      $('a[href="'+clickedLinkPathname+'.php"]').parent('li').removeClass('active');	

      // Apply the ".active" class to the clicked menu item
      $(e.currentTarget).parent('li').addClass('active')

      // Load content
      hsjs.ajaxSiteNav.loadContent(pageURL, ajaxLink, ajaxTitle, ajaxURL, ajaxHash); 

      // Close mobile menu
      $('.menu-mobile .menu-and-user:visible').slideToggle(200, 'swing');
    });			
  },

  init: function(){
    this.attachClickHandler();
  }
};



//hsjs.ajaxSiteNav.init();
